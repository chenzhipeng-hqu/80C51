C51 COMPILER V9.54   BSP                                                                   02/25/2018 00:50:15 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE BSP
OBJECT MODULE PLACED IN .\Objects\bsp.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE bsp.c OPTIMIZE(8,SPEED) BROWSE INCDIR(Y:\c51\qpn\include;Y:\c51\C51_lib)
                    - DEBUG OBJECTEXTEND PRINT(.\Listings\bsp.lst) TABS(2) OBJECT(.\Objects\bsp.obj)

line level    source

   1          /*****************************************************************************
   2          * Product: BSP for Blinky example, POSIX with cooperative QV kernel
   3          * Last updated for version 5.4.0
   4          * Last updated on  2015-05-24
   5          *
   6          *                    Q u a n t u m     L e a P s
   7          *                    ---------------------------
   8          *                    innovating embedded systems
   9          *
  10          * Copyright (C) Quantum Leaps, LLC. All rights reserved.
  11          *
  12          * This program is open source software: you can redistribute it and/or
  13          * modify it under the terms of the GNU General Public License as published
  14          * by the Free Software Foundation, either version 3 of the License, or
  15          * (at your option) any later version.
  16          *
  17          * Alternatively, this program may be distributed and modified under the
  18          * terms of Quantum Leaps commercial licenses, which expressly supersede
  19          * the GNU General Public License and are specifically designed for
  20          * licensees interested in retaining the proprietary status of their code.
  21          *
  22          * This program is distributed in the hope that it will be useful,
  23          * but WITHOUT ANY WARRANTY; without even the implied warranty of
  24          * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  25          * GNU General Public License for more details.
  26          *
  27          * You should have received a copy of the GNU General Public License
  28          * along with this program. If not, see <http://www.gnu.org/licenses/>.
  29          *
  30          * Contact information:
  31          * Web:   www.state-machine.com
  32          * Email: info@state-machine.com
  33          *****************************************************************************/
  34          #include "qpn.h"
  35          #include "bsp.h"
  36          #include "blinky.h"
  37          
  38          #include <stdlib.h>
  39          #include <stdio.h>
  40          #include <string.h> /* for memcpy() and memset() */
  41          
  42          Q_DEFINE_THIS_FILE
  43          
  44          /* Local-scope objects -----------------------------------------------------*/
  45          //static struct termios l_tsav; [> structure with saved terminal attributes <]
  46          
  47          /*..........................................................................*/
  48          void BSP_init() {
  49   1          printf("Simple Blinky example\nQP-nano version: %s\n"
  50   1                 "Press ESC to quit...\n",
  51   1                 QP_VERSION_STR);
  52   1      }
  53          /*..........................................................................*/
  54          void BSP_ledOff() {
C51 COMPILER V9.54   BSP                                                                   02/25/2018 00:50:15 PAGE 2   

  55   1          printf("OFF\n");
  56   1      }
  57          /*..........................................................................*/
  58          void BSP_ledOn() {
  59   1          printf("ON\n");
  60   1      }
  61          /*..........................................................................*/
  62          void Q_onAssert(char_t const Q_ROM * const file, int_t line) {
  63   1      //    fprintf(stderr, "\nAssertion failed in %s, line %d\n", file, line);
  64   1      //    exit(-1);
  65   1      }
*** WARNING C280 IN LINE 62 OF bsp.c: 'file': unreferenced local variable
*** WARNING C280 IN LINE 62 OF bsp.c: 'line': unreferenced local variable
  66          
  67          /*--------------------------------------------------------------------------*/
  68          void QF_onStartup(void) {
  69   1          //QF_setTickRate(BSP_TICKS_PER_SEC); 
  70   1      }
  71          /*..........................................................................*/
  72          void QF_onCleanup(void) {
  73   1          /* restore the saved terminal attributes */
  74   1          //tcsetattr(0, TCSANOW, &l_tsav);
  75   1          printf("\nBye! Bye!\n");
  76   1      }
  77          /*..........................................................................*/
  78          //void QF_onClockTickISR(void) {
  79              //struct timeval timeout = { 0U, 0U }; [> timeout for select() <]
  80              //fd_set con; [> FD set representing the console <]
  81          
  82              //QF_tickXISR(0U); [> perform the QF-nano clock tick processing <]
  83          
  84              //FD_ZERO(&con);
  85              //FD_SET(0, &con);
  86              //[> check if a console input is available, returns immediately <]
  87              //if (0 != select(1, &con, 0, 0, &timeout)) { [> any descriptor set? <]
  88                  //char ch;
  89                  //read(0, &ch, 1);
  90                  //if (ch == '\33') { [> ESC pressed? <]
  91                      //QF_stop();
  92                  //}
  93              //}
  94          //}
  95          
  96          void QF_stop(void) 
  97          {
  98   1          //l_isRunning = false;    [> cause exit from the event loop <]
  99   1      }
 100          
 101          void QV_onIdle(void)  /* CATION: called with interrupts DISABLED, NOTE01 */
 102          {
 103   1      #ifdef NDEBUG
                  /* Put the CPU and peripherals to the low-power mode.
                  * you might need to customize the clock management for your application,
                  * see the datasheet for your particular Cortex-M MCU.
                  */
                  QV_CPU_SLEEP();  /* atomically go to sleep and enable interrupts */
              #else
 110   1          QF_INT_ENABLE(); /* just enable interrupts */
 111   1      #endif
 112   1      }
 113          
 114          
C51 COMPILER V9.54   BSP                                                                   02/25/2018 00:50:15 PAGE 3   

*** WARNING C230 IN LINE 114 OF bsp.c: 'AO_Blinky': uses undefined struct/union tag 'BlinkyTag'


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     59    ----
   CONSTANT SIZE    =     91    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
